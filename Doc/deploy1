# Guide de déploiement VPS - Plateforme E-commerce

## 1. Configuration initiale VPS

### Connexion SSH
```bash
ssh root@148.230.125.251
```

### Installation des dépendances
```bash
# Mise à jour du système
apt update && apt upgrade -y

# Installation Node.js 18
curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
apt-get install -y nodejs

# Installation PM2, Nginx, Git
npm install -g pm2
apt install nginx git -y

# Installation de MySQL client (si nécessaire)
apt install mysql-client -y
```

## 2. Clonage des projets GitHub

```bash
# Créer le répertoire des applications
mkdir -p /var/www
cd /var/www

# Cloner les 3 projets (remplacez par vos URLs GitHub)
git clone https://github.com/votre-username/ecommerce-client.git
git clone https://github.com/votre-username/admin-birkshoes-store.git
git clone https://github.com/votre-username/birkshoes-api.git
```

## 3. Configuration Backend API

```bash
cd /var/www/birkshoes-api

# Installation des dépendances
npm install

# Créer le fichier .env de production
cat > .env << EOF
NODE_ENV=production
PORT=4000

# Base de données (votre configuration actuelle)
DATABASE_URL="mysql://u291647692_birkshoes_admi:Abdoufares141055@193.203.168.212:3306/u291647692_birkshoes_stor"

# JWT (changez cette clé en production)
JWT_SECRET=$(openssl rand -base64 64)
JWT_EXPIRES_IN=7d

# Upload
UPLOAD_DIR=uploads
MAX_FILE_SIZE=5242880

# CORS - mettre vos domaines
ALLOWED_ORIGINS=http://148.230.125.251:3000,http://148.230.125.251:3001,http://yourdomain.com
EOF

# Générer Prisma client
npx prisma generate

# Build du projet
npm run build

# Créer le dossier uploads
mkdir -p uploads

# Démarrer avec PM2
pm2 start dist/index.js --name "birkshoes-api" --env production
```

## 4. Configuration Frontend Client (React)

```bash
cd /var/www/ecommerce-client

# Installation des dépendances
npm install

# Créer le fichier .env de production
cat > .env << EOF
REACT_APP_API_URL=http://148.230.125.251:4000/api
REACT_APP_ADMIN_API_URL=http://148.230.125.251:4000
GENERATE_SOURCEMAP=false
EOF

# Build du projet
npm run build

# Servir avec PM2 (serve statique)
npm install -g serve
pm2 start "serve -s build -p 3000" --name "ecommerce-client"
```

## 5. Configuration Admin Panel (Next.js)

```bash
cd /var/www/admin-birkshoes-store

# Installation des dépendances
npm install

# Créer le fichier .env de production
cat > .env << EOF
# Frontend Next.js Environment
NEXT_PUBLIC_API_URL=http://148.230.125.251:4000
NEXT_PUBLIC_UPLOAD_URL=http://148.230.125.251:4000/uploads

# NextAuth
NEXTAUTH_URL=http://148.230.125.251:3001
NEXTAUTH_SECRET=$(openssl rand -base64 64)

# Environment
REACT_APP_ENVIRONMENT=production
EOF

# Build du projet
npm run build

# Démarrer avec PM2
pm2 start npm --name "admin-panel" -- start -- -p 3001
```

## 6. Configuration Nginx (Proxy Reverse)

```bash
# Créer la configuration Nginx
cat > /etc/nginx/sites-available/ecommerce << 'EOF'
# Backend API
server {
    listen 80;
    server_name api.yourdomain.com 148.230.125.251;
    
    location /api {
        proxy_pass http://localhost:4000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
    
    location /uploads {
        proxy_pass http://localhost:4000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

# Frontend Client
server {
    listen 80;
    server_name shop.yourdomain.com;
    
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

# Admin Panel
server {
    listen 80;
    server_name admin.yourdomain.com;
    
    location / {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}
EOF

# Activer la configuration
ln -s /etc/nginx/sites-available/ecommerce /etc/nginx/sites-enabled/
rm /etc/nginx/sites-enabled/default

# Tester et redémarrer Nginx
nginx -t
systemctl restart nginx
```

## 7. Configuration du Firewall

```bash
# Ouvrir les ports nécessaires
ufw allow ssh
ufw allow 'Nginx Full'
ufw allow 3000
ufw allow 3001
ufw allow 4000
ufw enable
```

## 8. Gestion PM2

```bash
# Vérifier le statut
pm2 status

# Sauvegarder la configuration PM2
pm2 save

# Configurer le démarrage automatique
pm2 startup ubuntu

# Logs des applications
pm2 logs birkshoes-api
pm2 logs ecommerce-client
pm2 logs admin-panel

# Redémarrer une application
pm2 restart birkshoes-api
```

## 9. Configuration SSL (optionnel mais recommandé)

```bash
# Installation Certbot
apt install snapd
snap install --classic certbot

# Obtenir les certificats SSL
certbot --nginx -d yourdomain.com -d api.yourdomain.com -d admin.yourdomain.com -d shop.yourdomain.com
```

## 10. Tests de fonctionnement

### Backend API
```bash
curl http://148.230.125.251:4000/api/health
```

### Frontend Client
```bash
curl http://148.230.125.251:3000
```

### Admin Panel
```bash
curl http://148.230.125.251:3001
```

## 11. Maintenance et mise à jour

```bash
# Script de déploiement automatique
cat > /var/www/deploy.sh << 'EOF'
#!/bin/bash
cd /var/www/birkshoes-api && git pull && npm run build && pm2 restart birkshoes-api
cd /var/www/ecommerce-client && git pull && npm run build && pm2 restart ecommerce-client
cd /var/www/admin-birkshoes-store && git pull && npm run build && pm2 restart admin-panel
EOF

chmod +x /var/www/deploy.sh
```

## URLs d'accès après déploiement

- **API Backend**: http://148.230.125.251:4000
- **Client E-commerce**: http://148.230.125.251:3000  
- **Panel Admin**: http://148.230.125.251:3001

## Points importants

1. **Base de données**: Votre MySQL externe est déjà configurée
2. **Sécurité**: Changez tous les secrets en production
3. **Domaine**: Remplacez les IP par vos noms de domaine
4. **SSL**: Activez HTTPS dès que possible
5. **Monitoring**: Surveillez les logs PM2 régulièrement